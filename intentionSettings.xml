<application>
  <component name="IntentionManagerSettings">
    <ignoreAction name="JSP/Replace with Jsp comment" />
    <ignoreAction name="Kotlin/Add '@JvmOverloads' annotation" />
    <ignoreAction name="Kotlin/Add '@JvmStatic' annotation" />
    <ignoreAction name="Kotlin/Add '@Throws' annotation" />
    <ignoreAction name="Kotlin/Add 'const' modifier" />
    <ignoreAction name="Kotlin/Add 'operator' modifier" />
    <ignoreAction name="Kotlin/Add braces" />
    <ignoreAction name="Kotlin/Add explicit type arguments" />
    <ignoreAction name="Kotlin/Add getter" />
    <ignoreAction name="Kotlin/Add getter and setter" />
    <ignoreAction name="Kotlin/Add import for member" />
    <ignoreAction name="Kotlin/Add indices to 'for' loop" />
    <ignoreAction name="Kotlin/Add labeled return to last expression in a lambda" />
    <ignoreAction name="Kotlin/Add missing component" />
    <ignoreAction name="Kotlin/Add name to argument" />
    <ignoreAction name="Kotlin/Add names to call arguments" />
    <ignoreAction name="Kotlin/Add remaining branches" />
    <ignoreAction name="Kotlin/Add setter" />
    <ignoreAction name="Kotlin/Add use-site target" />
    <ignoreAction name="Kotlin/Add val/var to primary constructor parameter" />
    <ignoreAction name="Kotlin/Change package" />
    <ignoreAction name="Kotlin/Convert Boolean? == const to elvis" />
    <ignoreAction name="Kotlin/Convert anonymous function to lambda expression" />
    <ignoreAction name="Kotlin/Convert concatenation to template" />
    <ignoreAction name="Kotlin/Convert function to property" />
    <ignoreAction name="Kotlin/Convert function type parameter to receiver" />
    <ignoreAction name="Kotlin/Convert function type receiver to parameter" />
    <ignoreAction name="Kotlin/Convert lambda expression to anonymous function" />
    <ignoreAction name="Kotlin/Convert member to extension" />
    <ignoreAction name="Kotlin/Convert object literal to class" />
    <ignoreAction name="Kotlin/Convert object literal to lambda" />
    <ignoreAction name="Kotlin/Convert parameter to receiver" />
    <ignoreAction name="Kotlin/Convert property getter to initializer" />
    <ignoreAction name="Kotlin/Convert property initializer to getter" />
    <ignoreAction name="Kotlin/Convert property to function" />
    <ignoreAction name="Kotlin/Convert receiver to parameter" />
    <ignoreAction name="Kotlin/Convert template to concatenated string" />
    <ignoreAction name="Kotlin/Convert to 'trimIndent'" />
    <ignoreAction name="Kotlin/Convert to 'trimMargin'" />
    <ignoreAction name="Kotlin/Convert to also" />
    <ignoreAction name="Kotlin/Convert to anonymous object" />
    <ignoreAction name="Kotlin/Convert to apply" />
    <ignoreAction name="Kotlin/Convert to array parameter" />
    <ignoreAction name="Kotlin/Convert to block body" />
    <ignoreAction name="Kotlin/Convert to comparisons" />
    <ignoreAction name="Kotlin/Convert to enum class" />
    <ignoreAction name="Kotlin/Convert to lateinit var" />
    <ignoreAction name="Kotlin/Convert to nullable var" />
    <ignoreAction name="Kotlin/Convert to object declaration" />
    <ignoreAction name="Kotlin/Convert to primary constructor" />
    <ignoreAction name="Kotlin/Convert to range check" />
    <ignoreAction name="Kotlin/Convert to run" />
    <ignoreAction name="Kotlin/Convert to sealed class" />
    <ignoreAction name="Kotlin/Convert to secondary constructor" />
    <ignoreAction name="Kotlin/Convert to unsafe cast" />
    <ignoreAction name="Kotlin/Convert to unsafeCast() call" />
    <ignoreAction name="Kotlin/Convert to vararg parameter" />
    <ignoreAction name="Kotlin/Convert to with" />
    <ignoreAction name="Kotlin/Convert try-finally to .use()" />
    <ignoreAction name="Kotlin/Copy concatenation text to clipboard" />
    <ignoreAction name="Kotlin/Create Kotlin subclass" />
    <ignoreAction name="Kotlin/Create test" />
    <ignoreAction name="Kotlin/DeMorgan Law" />
    <ignoreAction name="Kotlin/Eliminate argument of 'when'" />
    <ignoreAction name="Kotlin/Flatten 'when' expression" />
    <ignoreAction name="Kotlin/Flip 'equals'" />
    <ignoreAction name="Kotlin/Flip binary expression" />
    <ignoreAction name="Kotlin/Implement abstract member" />
    <ignoreAction name="Kotlin/Import members with '*'" />
    <ignoreAction name="Kotlin/Indent raw string" />
    <ignoreAction name="Kotlin/Insert curly braces around variable" />
    <ignoreAction name="Kotlin/Introduce backing property" />
    <ignoreAction name="Kotlin/Introduce local variable" />
    <ignoreAction name="Kotlin/Invert 'if' condition" />
    <ignoreAction name="Kotlin/Iterate over collection" />
    <ignoreAction name="Kotlin/Join declaration and assignment" />
    <ignoreAction name="Kotlin/Make internal" />
    <ignoreAction name="Kotlin/Make open" />
    <ignoreAction name="Kotlin/Make private" />
    <ignoreAction name="Kotlin/Make protected" />
    <ignoreAction name="Kotlin/Make public" />
    <ignoreAction name="Kotlin/Merge 'if's" />
    <ignoreAction name="Kotlin/Merge 'when' expressions" />
    <ignoreAction name="Kotlin/Move declaration to separate file" />
    <ignoreAction name="Kotlin/Move lambda argument into parentheses" />
    <ignoreAction name="Kotlin/Move out of companion object" />
    <ignoreAction name="Kotlin/Move to build&gt;sourceDirectory tag" />
    <ignoreAction name="Kotlin/Move to class body" />
    <ignoreAction name="Kotlin/Move to companion object" />
    <ignoreAction name="Kotlin/Move to compile execution" />
    <ignoreAction name="Kotlin/Move to constructor" />
    <ignoreAction name="Kotlin/Move to top level" />
    <ignoreAction name="Kotlin/Put arguments on one line" />
    <ignoreAction name="Kotlin/Put arguments on separate lines" />
    <ignoreAction name="Kotlin/Put parameters on one line" />
    <ignoreAction name="Kotlin/Put parameters on separate lines" />
    <ignoreAction name="Kotlin/Remove argument name" />
    <ignoreAction name="Kotlin/Remove braces" />
    <ignoreAction name="Kotlin/Remove curly braces" />
    <ignoreAction name="Kotlin/Remove empty class body" />
    <ignoreAction name="Kotlin/Remove empty constructor body" />
    <ignoreAction name="Kotlin/Remove empty primary constructor" />
    <ignoreAction name="Kotlin/Remove explicit lambda parameter types (may break code)" />
    <ignoreAction name="Kotlin/Remove explicit supertype qualification" />
    <ignoreAction name="Kotlin/Remove explicit type arguments" />
    <ignoreAction name="Kotlin/Remove explicit type specification" />
    <ignoreAction name="Kotlin/Remove indices in 'for' loop" />
    <ignoreAction name="Kotlin/Remove labeled return from last expression in a lambda" />
    <ignoreAction name="Kotlin/Remove redundant '.let' call" />
    <ignoreAction name="Kotlin/Remove redundant calls of the conversion method" />
    <ignoreAction name="Kotlin/Remove single-expression string template" />
    <ignoreAction name="Kotlin/Remove unnecessary parentheses" />
    <ignoreAction name="Kotlin/Remove unnecessary parentheses from function call with lambda" />
    <ignoreAction name="Kotlin/Rename file to match top-level class name" />
    <ignoreAction name="Kotlin/Replace '!!' expression with 'if' expression" />
    <ignoreAction name="Kotlin/Replace '_' with parameter name" />
    <ignoreAction name="Kotlin/Replace 'assert' with 'if' statement" />
    <ignoreAction name="Kotlin/Replace 'contains' call with 'in' operator" />
    <ignoreAction name="Kotlin/Replace 'if' expression with '!!' expression" />
    <ignoreAction name="Kotlin/Replace 'if' expression with return" />
    <ignoreAction name="Kotlin/Replace 'if' with 'assert' statement" />
    <ignoreAction name="Kotlin/Replace 'if' with 'when'" />
    <ignoreAction name="Kotlin/Replace 'if' with elvis operator" />
    <ignoreAction name="Kotlin/Replace 'invoke' with direct call" />
    <ignoreAction name="Kotlin/Replace 'it' with explicit parameter" />
    <ignoreAction name="Kotlin/Replace 'substring' call with 'dropLast' call" />
    <ignoreAction name="Kotlin/Replace 'substring' call with 'substringAfter' call" />
    <ignoreAction name="Kotlin/Replace 'substring' call with 'substringBefore' call" />
    <ignoreAction name="Kotlin/Replace 'substring' call with 'take' call" />
    <ignoreAction name="Kotlin/Replace 'substring' call with indexing operation call" />
    <ignoreAction name="Kotlin/Replace 'when' with 'if'" />
    <ignoreAction name="Kotlin/Replace Math.max with coerceAtLeast" />
    <ignoreAction name="Kotlin/Replace Math.min with coerceAtMost" />
    <ignoreAction name="Kotlin/Replace assignment with 'if' expression" />
    <ignoreAction name="Kotlin/Replace assignment with 'when' expression" />
    <ignoreAction name="Kotlin/Replace by reconstructed type" />
    <ignoreAction name="Kotlin/Replace call with unary operator" />
    <ignoreAction name="Kotlin/Replace camel-case name with spaces" />
    <ignoreAction name="Kotlin/Replace elvis expression with 'if' expression" />
    <ignoreAction name="Kotlin/Replace explicit lambda parameter with 'it'" />
    <ignoreAction name="Kotlin/Replace infix call with ordinary call" />
    <ignoreAction name="Kotlin/Replace negated sequence with DeMorgan equivalent" />
    <ignoreAction name="Kotlin/Replace overloaded operator with function call" />
    <ignoreAction name="Kotlin/Replace property initializer with 'if' expression" />
    <ignoreAction name="Kotlin/Replace property initializer with 'when' expression" />
    <ignoreAction name="Kotlin/Replace return with 'if' expression" />
    <ignoreAction name="Kotlin/Replace return with 'when' expression" />
    <ignoreAction name="Kotlin/Replace safe access expression with 'if' expression" />
    <ignoreAction name="Kotlin/Replace size check with 'isNotEmpty'" />
    <ignoreAction name="Kotlin/Replace size zero check with 'isEmpty'" />
    <ignoreAction name="Kotlin/Replace with '+='" />
    <ignoreAction name="Kotlin/Replace with '..' operator" />
    <ignoreAction name="Kotlin/Replace with a 'for' loop" />
    <ignoreAction name="Kotlin/Replace with a 'forEach' function call" />
    <ignoreAction name="Kotlin/Replace with block comment" />
    <ignoreAction name="Kotlin/Replace with end of line comment" />
    <ignoreAction name="Kotlin/Replace with infix function call" />
    <ignoreAction name="Kotlin/Replace with ordinary assignment" />
    <ignoreAction name="Kotlin/Simplify boolean expression" />
    <ignoreAction name="Kotlin/Specify all types explicitly in destructuring declaration" />
    <ignoreAction name="Kotlin/Specify explicit lambda signature" />
    <ignoreAction name="Kotlin/Specify type explicitly" />
    <ignoreAction name="Kotlin/Split 'if' into two" />
    <ignoreAction name="Kotlin/Split property declaration" />
    <ignoreAction name="Kotlin/To ordinary string literal" />
    <ignoreAction name="Kotlin/To raw string literal" />
    <ignoreAction name="Kotlin/Use destructuring declaration" />
    <ignoreAction name="Kotlin/Use property access syntax" />
    <ignoreAction name="Kotlin/Use withIndex() instead of manual index increment" />
    <ignoreAction name="Struts 2/Create validation.xml" />
    <ignoreAction name="Java/Declaration/Split Declaration" />
    <ignoreAction name="Java/I18N/Convert to Basic Latin" />
    <ignoreAction name="Java/Comments/Move Comment to Separate Line" />
    <ignoreAction name="Java/Control Flow/Invert 'if' condition" />
  </component>
</application>