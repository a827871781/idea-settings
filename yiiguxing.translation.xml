<application>
  <component name="AppStorage">
    <histories>
      <item value="Error executing Maven. 2 problems were encountered while building the effective settings" />
      <item value="Error executing Maven.&#10;2 problems were encountered while building the effective settings" />
      <item value="This exception may be thrown by methods that have detected concurrent * modification of an object when such modification is not permissible. * &lt;p&gt; * For example, it is not generally permissible for one thread to modify a Collection * while another thread is iterating over it. In general, the results of the * iteration are undefined under these circumstances. Some Iterator * implementations (including those of all the general purpose collection implementations * provided by the JRE) may choose to throw this exception if this behavior is * detected. Iterators that do this are known as &lt;i&gt;fail-fast&lt;/i&gt; iterators, * as they fail quickly and cleanly, rather that risking arbitrary, * non-deterministic behavior at an undetermined time in the future. * &lt;p&gt; * Note that this exception does not always indicate that an object has * been concurrently modified by a &lt;i&gt;different&lt;/i&gt; thread. If a single * thread issues a sequence of method invocations that violates the * contract of an object, the object may throw this exception. For * example, if a thread modifies a collection directly while it is * iterating over the collection with a fail-fast iterator, the iterator * will throw this exception. * * &lt;p&gt;Note that fail-fast behavior cannot be guaranteed as it is, generally * speaking, impossible to make any hard guarantees in the presence of * unsynchronized concurrent modification. Fail-fast operations * throw {@code ConcurrentModificationException} on a best-effort basis. * Therefore, it would be wrong to write a program that depended on this * exception for its correctness: &lt;i&gt;{@code ConcurrentModificationException} * should be used only to detect bugs.&lt;/i&gt;" />
      <item value="Non-resolvable parent POM for com.cober:pp2s-channel-service:[unknown-version]: Could not find artifact com.cober:pp2s:pom:1.0-SNAPSHOT and 'parent.relativePath' points at wrong local POM @ line 10, column 13" />
      <item value="The build could not read 1 project -&gt; [Help 1]" />
      <item value="Determines if the specified character is a letter or digit. * &lt;p&gt; * A character is considered to be a letter or digit if either * {@code Character.isLetter(char ch)} or * {@code Character.isDigit(char ch)} returns * {@code true} for the character. * * &lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This method cannot handle &lt;a * href=&quot;#supplementary&quot;&gt; supplementary characters&lt;/a&gt;. To support * all Unicode characters, including supplementary characters, use * the {@link #isLetterOrDigit(int)} method." />
      <item value="out" />
      <item value="* A constant holding the minimum value an {@code int} can * have, -2&lt;sup&gt;31&lt;/sup&gt;. */" />
      <item value="Reference Queue" />
      <item value="Scans for interfaces that declare they are feign clients (via {@link FeignClient * &lt;code&gt;@FeignClient&lt;/code&gt;}). Configures component scanning directives for use with * {@link org.springframework.context.annotation.Configuration * &lt;code&gt;@Configuration&lt;/code&gt;} classes." />
      <item value="the stamp" />
      <item value="the new value for the stamp" />
      <item value="@param newStamp the new value for the stamp" />
      <item value="the new value for the reference" />
      <item value="Unconditionally sets the value of both the reference and stamp. * * @param newReference the new value for the reference * @param newStamp the new value for the stamp" />
      <item value="Responsible for adding in a marker bean to activate" />
      <item value="springapplication.run(application.class, args);" />
      <item value="create" />
      <item value="Has been loaded by XML or SqlProvider, ignoring the injection of the SQL." />
      <item value="/** * The annotated element size must be between the specified boundaries (included). * &lt;p&gt; * Supported types are: * &lt;ul&gt; * &lt;li&gt;{@code CharSequence} (length of character sequence is evaluated)&lt;/li&gt; * &lt;li&gt;{@code Collection} (collection size is evaluated)&lt;/li&gt; * &lt;li&gt;{@code Map} (map size is evaluated)&lt;/li&gt; * &lt;li&gt;Array (array length is evaluated)&lt;/li&gt; * &lt;/ul&gt; * &lt;p&gt; * {@code null} elements are considered valid. * * @author Emmanuel Bernard */" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="22" />
        <entry key="ENGLISH" value="22" />
      </map>
    </option>
  </component>
</application>